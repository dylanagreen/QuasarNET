#!/usr/bin/env python

import numpy as np
from quasarnet import io
import fitsio
import sys

import argparse

parser=argparse.ArgumentParser()

parser.add_argument('--spectra',type=str, nargs='+', required=True,
        help='list of spectra files')

parser.add_argument('--sdrq',type=str, required=False, default=None,
        help='superset file')

parser.add_argument('--out',type=str, required=True,
        help='output file')

args=parser.parse_args()

"""## If we have an sdrq, filter the tids from spall by those in sdrq.
if args.sdrq is not None:
    print('INFO: reading sdrq')
    sdrq = fitsio.FITS(args.sdrq)
    tids_sdrq = sdrq[1]['TARGETID'][:]
    print('INFO: done')"""

## Cycle through the spectra files, exctracting data from each one.
fl = []
tids = []
nread = 0
for i,f in enumerate(args.spectra):
    aux = io.read_desi_spectra(f,verbose=False,target_col='SV1_DESI_TARGET')
    if aux is not None:
        tids.append(aux[0])
        fl.append(aux[1])
    print('INFO: read {:4d}/{:4d} files ({:.2%})'.format(i+1,len(args.spectra),(i+1)/len(args.spectra)),end='\r')
print('')

# Concatenate all results to form single arrays.
if len(tids)>0:
    tids = np.concatenate(tids)
    fl = np.concatenate(fl)

    ## Write the output to a fits file, with flux/iv in the primary HDU, and a
    ## catalog of objects in the 1st extension.
    h = fitsio.FITS(args.out,'rw',clobber=True)
    h.write(fl)
    h.write([tids], names=['TARGETID'])
    h.close()
else:
    print('WARN: no quasar targets found in spectra files. Exiting.')
