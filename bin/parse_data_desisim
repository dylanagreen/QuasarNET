#!/usr/bin/env python

import numpy as np
from quasarnet import io
import fitsio
import sys

import argparse

parser=argparse.ArgumentParser()

parser.add_argument('--spectra',type=str, nargs='+', required=True,
        help='list of spectra files')

parser.add_argument('--sdrq',type=str, required=False, default=None,
        help='superset file')

parser.add_argument('--out',type=str, required=True,
        help='output file')

args=parser.parse_args()

## Cycle through the spectra files, exctracting data from each one.
fl = []
tids = []
nread = 0
aux = io.read_desi_spectra(args.spectra,verbose=False,target_col='SV1_DESI_TARGET')
if aux:
    tids, spid0, spid1, spid2, fliv = aux
else:
    raise('WARN: No spectra found; exiting.')

## If we have an sdrq, filter the tids by those in sdrq.
if args.sdrq is not None:
    print('INFO: reading sdrq, including only spectra with targetid in sdrq.')
    sdrq = fitsio.FITS(args.sdrq)
    tids_sdrq = sdrq[1]['TARGETID'][:]
    sdrq.close()
    w = np.in1d(tids,tids_sdrq)
    tids = tids[w]
    spid0 = spid0[w]
    spid1 = spid1[w]
    spid2 = spid2[w]
    fliv = fliv[w,:]
    print('INFO: done.')

## Define the spid components in a header.
head = utils.get_spectrum_id_fields('DESISIM')

## Write the output to a fits file, with flux/iv in the primary HDU, and a
## catalog of objects in the 1st extension.
h = fitsio.FITS(args.out,'rw',clobber=True)
h.write(fliv)
h.write([tids,spid0,spid1,spid2], names=['TARGETID','SPID0','SPID1','SPID2'], head=head)
h.close()
